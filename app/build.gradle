apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlinx-serialization'
apply plugin: "de.mannodermaus.android-junit5"


android {

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    dataBinding {
        enabled = true
    }


    defaultConfig {
        applicationId "com.example.finalprojectapp"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"


    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }


}


dependencies {
    def room_version = "2.2.5"
    def nev = "2.2.2"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // or "kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0" // JVM dependency

    //local DB
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.navigation:navigation-fragment:$nev"
    implementation "androidx.navigation:navigation-ui:$nev"
    implementation "androidx.navigation:navigation-fragment-ktx:$nev"
    implementation "androidx.navigation:navigation-ui-ktx:$nev"
    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
    implementation 'com.google.firebase:firebase-auth:19.3.1'
    implementation 'com.google.firebase:firebase-firestore-ktx:21.4.3'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    // Required only if Facebook login support is required
    // Find the latest Facebook SDK releases here: https://goo.gl/Ce5L94
    //implementation 'com.facebook.android:facebook-android-sdk:4.x'

    // Required only if Twitter login support is required
    // Find the latest Twitter SDK releases here: https://goo.gl/E5wZvQ
    //implementation 'com.twitter.sdk.android:twitter-core:3.x'

    //shared prafance secure
    implementation "androidx.security:security-crypto:1.0.0-beta01"
    //work manger
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    //live data
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    //biometric
    implementation 'androidx.biometric:biometric:1.0.1'


// Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
// AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
//// Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'

    testImplementation 'junit:junit:4.13'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.25.0'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.1"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.1"

    // (Optional) If you also have JUnit 4-based tests

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.6.1"

    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.1"
    androidTestImplementation "de.mannodermaus.junit5:android-instrumentation-test:0.2.2"

    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.1"
    androidTestRuntimeOnly "org.junit.platform:junit-platform-runner:1.6.1"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-instrumentation-test-runner:0.2.2"


    implementation 'com.google.android.material:material:1.1.0'


}
